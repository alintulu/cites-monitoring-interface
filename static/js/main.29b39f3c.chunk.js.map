{"version":3,"sources":["components/PlantScreen/index.js","components/Header/index.js","components/ScreenHeader/index.js","components/Dashboard/index.js","container/DashboardContainer.js","components/Card/index.js","components/Gallery/index.js","components/PlantsScreen/index.js","container/PlantsScreenContainer.js","container/PlantScreenContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","alt","src","key","exact","activeClassName","ScreenHeader","title","Dashboard","details","length","DashboardContainer","connect","state","Card","path","name","image","EditableGallery","props","handleSearchChange","event","setState","search","target","value","toLowerCase","elements","this","filteredElements","filter","element","includes","type","onChange","placeholder","map","id","Component","withRouter","plantDetails","undefined","images","PlantsScreenContainer","PlantsScreen","plotColor","window","getComputedStyle","document","documentElement","getPropertyValue","weeklyOffers","lastWeek","weeklyChanges","week","weeklyChange","push","PlantScreen","offers","href","download","nonscientific_names","join","all_offers","platform","price","data","x","y","mode","marker","color","layout","width","height","xaxis","showline","dtick","yaxis","p","offer","link","rel","min_order","getPlantOffers","plantOffers","find","plantOffer","match","params","plantId","PlantScreenContainer","ownProps","App","component","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","initialState","store","createStore","combineReducers","ReactDOM","render","getElementById","URL","process","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8z4BAWA,I,mHCIeA,G,YAXA,WACb,OACE,yBAAKC,UAAU,UACb,kBAAC,IAAD,CAAMC,GAAG,KACP,yBAAKC,IAAI,OAAOF,UAAU,cAAcG,IAAI,iBAE9C,kBAAC,IAAD,CAASC,IAAI,SAASJ,UAAU,cAAcK,OAAK,EAACJ,GAAG,UAAUK,gBAAgB,UAAjF,aCCSC,G,MARM,SAAC,GAAa,IAAZC,EAAW,EAAXA,MACrB,OACE,4BAAQR,UAAU,iBAChB,wBAAIA,UAAU,gBAAgBQ,MCYrBC,EAfG,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAClB,OACE,6BACE,kBAAC,EAAD,CAAcF,MAAM,kBACpB,kHACA,uFACA,yBACAL,IAAI,oHACJD,IAAI,mBAEJ,gDAAsBQ,EAAQC,OAA9B,8BCCSC,EALYC,aANH,SAACC,GACvB,MAAO,CACLJ,QAASI,EAAMJ,WAMjB,KAFyBG,CAGzBJ,GCOaM,G,MAfF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,MACzB,OACE,8BACE,kBAAC,IAAD,CAAMjB,GAAIe,GACR,yBAAKhB,UAAU,iBACb,yBAAKA,UAAU,gBACb,yBAAKA,UAAU,WAAWG,IAAKe,EAAOhB,IAAKe,IAC3C,yBAAKjB,UAAU,oBAAoBiB,SCiChCE,G,kBAtCb,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KAMRC,mBAAqB,SAACC,GACpB,EAAKC,SAAS,CAACC,OAAQF,EAAMG,OAAOC,MAAMC,iBAN1C,EAAKb,MAAQ,CACXU,OAAQ,IAHO,E,sEAWT,IAAD,OACAI,EAAYC,KAAKT,MAAjBQ,SACAJ,EAAUK,KAAKf,MAAfU,OACDM,EAAmBF,EAASG,QAAO,SAAAC,GAAO,OAAIA,EAAQf,KAAKU,cAAcM,SAAST,MACxF,OACE,6BACE,2BACExB,UAAU,SACVkC,KAAK,OACLR,MAAOF,EACPW,SAAU,SAACb,GAAD,OAAW,EAAKD,mBAAmBC,IAC7Cc,YAAY,cACd,yBAAKpC,UAAU,YAEX8B,EAAiBO,KAAI,SAAAL,GACnB,OAAQ,0BAAM5B,IAAK4B,EAAQM,GAAItC,UAAU,WAC/B,kBAAC,EAAD,CAAMiB,KAAMe,EAAQf,KAAMD,KAAMgB,EAAQhB,KAAME,MAAOc,EAAQd,aAK7E,4BAAQlB,UAAU,eAAc,uBAAGA,UAAU,qB,GAjCvBuC,cCefC,eAfM,SAAC,GAAe,IAC7BZ,EAD4B,EAAblB,QACI2B,KAAI,SAAAI,GAAY,MAAK,CAC5CH,GAAIG,EAAaH,GACjBrB,KAAMwB,EAAaxB,KACnBD,KAAM,UAAYyB,EAAaH,GAC/BpB,WAA+BwB,IAAxBD,EAAaE,OAAsBF,EAAaE,OAAO,GAAK,mJAErE,OACE,6BACE,kBAAC,EAAD,CAAcnC,MAAM,WACpB,kBAAC,EAAD,CAASoB,SAAUA,QCDVgB,EALe/B,aANN,SAAAC,GACtB,MAAO,CACLJ,QAASI,EAAMJ,WAMjB,KAF4BG,CAG5BgC,G,iBRNIC,G,MAAYC,OAAOC,iBAAiBC,SAASC,iBAAiBC,iBAAiB,cAE/EC,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,GAC9CC,EAAWD,EAAa,GACtBE,EAAgB,GACbC,EAAO,EAAGA,EAAOH,EAAazC,OAAQ4C,IAAQ,CACrD,IAAIC,GAAgBJ,EAAaG,GAAQF,GAAYA,EACrDC,EAAcG,KAAKD,GACfH,EAAWD,EAAaG,GAG9B,IAkIeG,EAlIK,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,OAAQjD,EAAa,EAAbA,QAC5B,OACE,6BACE,kBAAC,EAAD,CAAcF,MAAOE,EAAQO,OAC7B,yBAAKjB,UAAU,eACb,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,kBAAkBG,IAAKO,EAAQiC,OAAO,GAAIzC,IAAKQ,EAAQO,OACtE,uBAAG2C,KAAK,eAAeC,UAAQ,GAC7B,4BAAQ7D,UAAU,OAAM,uBAAGA,UAAU,qBAEvC,4BAAQA,UAAU,OAAM,uBAAGA,UAAU,iBAEvC,yBAAKA,UAAU,gCACb,kCACA,2BACGU,EAAQ4B,SAEsBI,IAAhChC,EAAQoD,qBAAqCpD,EAAQoD,oBAAoBnD,OAAS,GACjF,6BACE,2CACA,2BACGD,EAAQoD,oBAAoBC,KAAK,aAIjBrB,IAAtBiB,EAAOK,YAA4BL,EAAOK,WAAWrD,OAAS,GAC7D,6BACA,6CACA,2BACGgD,EAAOK,WAAW,GAAGC,SADxB,KACoCN,EAAOK,WAAW,GAAGL,OAAO,GAAGO,OAEnE,kBAAC,IAAD,CACEC,KAAM,CACJ,CACEC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/BC,EAAGjB,EACHlB,KAAM,UACNoC,KAAM,eACNC,OAAQ,CAACC,MAAO1B,KAGpB2B,OACE,CACEC,MAAO,IACPC,OAAQ,IACRnE,MAAO,4BACPoE,MAAO,CACLpE,MAAO,OACPqE,UAAU,EACVC,MAAO,GAETC,MAAO,CACLvE,MAAO,WACPqE,UAAU,EACVC,MAAO,MAKf,kBAAC,IAAD,CACEX,KAAM,CACJ,CACEC,EAAG,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAC/BC,EAAGf,EACHpB,KAAM,MACNqC,OAAQ,CAACC,MAAO1B,KAGpB2B,OACE,CACEC,MAAO,IACPC,OAAQ,IACRnE,MAAO,iBACPoE,MAAO,CACLpE,MAAO,OACPqE,UAAU,EACVC,MAAO,GAETC,MAAO,CACLvE,MAAO,mBACPqE,UAAU,EACVC,MAAO,MAKb,6CACA,2BACGnB,EAAOK,WAAW3B,KAAI,SAAA2C,GACrB,OAAO,6BACC,4BAAKA,EAAEf,eACOvB,IAAbsC,EAAErB,QAAwBqB,EAAErB,OAAOhD,OAAS,GAC3C,6BACA,+BACA,4BACE,qCACA,8CACA,4CAECqE,EAAErB,OAAOtB,KAAI,SAAA4C,GACZ,OAAO,4BACG,4BACE,uBAAGrB,KAAMqB,EAAMC,KAAMzD,OAAO,SAAS0D,IAAI,uBAAuBF,EAAMf,QAExE,4BACGe,EAAMG,WAET,4BACE,4BAAQpF,UAAU,QAAO,uBAAGA,UAAU,4BAUtE,0BAAMA,UAAU,QAAhB,sBAGmB0C,IAAtBiB,EAAOK,YAAwD,GAA5BL,EAAOK,WAAWrD,QACpD,mDSxIJ0E,EAAiB,SAAC1B,EAAQvC,GAC9B,IAAIkE,EAAc3B,EAAO4B,MAAK,SAAAC,GAAU,OAAIA,EAAWlD,IAAMlB,EAAMqE,MAAMC,OAAOC,WAEhF,OADAL,OAA8B5C,IAAhB4C,EAA2BA,EAAc,CAAC,GAAMlE,EAAMqE,MAAMC,OAAOC,QAAS,WAAc,KAoB3FC,EALc/E,aAPL,SAACC,EAAO+E,GAC9B,MAAO,CACLlC,OAAQ0B,EAAevE,EAAM6C,OAAQkC,GACrCnF,SAPqBA,EAOII,EAAMJ,QAPDU,EAOUyE,EANnCnF,EAAQ6E,MAAK,SAAA9C,GAAY,OAAIA,EAAaH,IAAMlB,EAAMqE,MAAMC,OAAOC,aADpD,IAACjF,EAASU,IAahC,KAF2BP,CAG3B6C,GCEaoC,E,iLAfX,OACE,6BACE,kBAAC,EAAD,MACA,yBAAK9F,UAAU,WACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOK,OAAK,EAACW,KAAK,IAAI+E,UAAWnF,IACjC,kBAAC,IAAD,CAAOP,OAAK,EAACW,KAAK,UAAU+E,UAAWnD,IACvC,kBAAC,IAAD,CAAOvC,OAAK,EAACW,KAAK,kBAAkB+E,UAAWH,W,GATzCrD,aCIZyD,EAAcC,QACW,cAA7BlD,OAAOmD,SAASC,UAEe,UAA7BpD,OAAOmD,SAASC,UAEhBpD,OAAOmD,SAASC,SAASV,MACvB,2DAsCN,SAASW,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,MAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB/F,QACfyF,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,iHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,WAO5BU,OAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,MC3EjE,IAAMC,EAAe,CACnB7G,Q,MACAiD,O,OAGI6D,EAAQC,YAAYC,YAAgB,IAAKH,GAE/CI,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJvE,SAAS4E,eAAe,SDZnB,SAAkBvB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIuB,IAAIC,8BAAwBhF,OAAOmD,SAAStC,MACpDoE,SAAWjF,OAAOmD,SAAS8B,OAIvC,OAGFjF,OAAOkF,iBAAiB,QAAQ,WAC9B,IAAM5B,EAAK,UAAM0B,8BAAN,sBAEP/B,IAgEV,SAAiCK,EAAOC,GAEtC4B,MAAM7B,GACHK,MAAK,SAAAyB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5CjC,UAAUC,cAAciC,MAAM/B,MAAK,SAAAC,GACjCA,EAAa+B,aAAahC,MAAK,WAC7B3D,OAAOmD,SAASyC,eAKpBvC,EAAgBC,EAAOC,MAG1Be,OAAM,WACLJ,QAAQC,IACN,oEArFA0B,CAAwBvC,EAAOC,GAI/BC,UAAUC,cAAciC,MAAM/B,MAAK,WACjCO,QAAQC,IACN,iHAMJd,EAAgBC,EAAOC,OCf/BE,K","file":"static/js/main.29b39f3c.chunk.js","sourcesContent":["import React from 'react';\r\nimport ScreenHeader from '../ScreenHeader';\r\nimport Plot from 'react-plotly.js';\r\nimport '../../App.css';\r\nimport './PlantScreen.css';\r\n\r\nconst plotColor = window.getComputedStyle(document.documentElement).getPropertyValue(\"--accent2\");\r\n\r\nconst weeklyOffers = [2, 6, 3, 1, 1, 2, 5, 8, 10, 7]\r\nvar lastWeek = weeklyOffers[0]\r\nconst weeklyChanges = []\r\nfor (var week = 1; week < weeklyOffers.length; week++) {\r\n  var weeklyChange = (weeklyOffers[week] - lastWeek) / lastWeek\r\n  weeklyChanges.push(weeklyChange)\r\n  var lastWeek = weeklyOffers[week]\r\n}\r\n\r\nconst PlantScreen = ({offers, details}) => {\r\n  return (\r\n    <div>\r\n      <ScreenHeader title={details.name}/>\r\n      <div className=\"Details-row\">\r\n        <div className=\"Details-column Details-left\">\r\n          <img className=\"Details-gallery\" src={details.images[0]} alt={details.name}/>\r\n          <a href=\"/offers.json\" download>\r\n            <button className=\"Fab\"><i className=\"fa fa-file-csv\"/></button>\r\n          </a>\r\n          <button className=\"Fab\"><i className=\"fa fa-sync\"/></button>\r\n        </div>\r\n        <div className=\"Details-column Details-right\">\r\n          <h3>ID</h3>\r\n          <p>\r\n            {details.id}\r\n          </p>\r\n          {details.nonscientific_names !== undefined && details.nonscientific_names.length > 0 &&\r\n            <div>\r\n              <h3>Other names</h3>\r\n              <p>\r\n                {details.nonscientific_names.join(\", \")}\r\n              </p>\r\n            </div>\r\n          }\r\n          {offers.all_offers !== undefined && offers.all_offers.length > 0 &&\r\n            <div>\r\n            <h3>Average price</h3>\r\n            <p>\r\n              {offers.all_offers[0].platform}: {offers.all_offers[0].offers[0].price}\r\n            </p>\r\n            <Plot\r\n              data={[\r\n                {\r\n                  x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n                  y: weeklyOffers,\r\n                  type: 'scatter',\r\n                  mode: 'lines+points',\r\n                  marker: {color: plotColor},\r\n                }\r\n              ]}\r\n              layout={\r\n                {\r\n                  width: 400,\r\n                  height: 300,\r\n                  title: 'Number of offers per week',\r\n                  xaxis: {\r\n                    title: 'week',\r\n                    showline: true,\r\n                    dtick: 1\r\n                  },\r\n                  yaxis: {\r\n                    title: '# offers',\r\n                    showline: true,\r\n                    dtick: 2\r\n                  }\r\n                }\r\n            }\r\n            />\r\n            <Plot\r\n              data={[\r\n                {\r\n                  x: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10],\r\n                  y: weeklyChanges,\r\n                  type: 'bar',\r\n                  marker: {color: plotColor},\r\n                }\r\n              ]}\r\n              layout={\r\n                {\r\n                  width: 400,\r\n                  height: 300,\r\n                  title: 'Weekly changes',\r\n                  xaxis: {\r\n                    title: 'week',\r\n                    showline: true,\r\n                    dtick: 1\r\n                  },\r\n                  yaxis: {\r\n                    title: 'In-/decrease (%)',\r\n                    showline: true,\r\n                    dtick: 2\r\n                  }\r\n                }\r\n            }\r\n            />\r\n              <h3>Latest offers</h3>\r\n              <p>\r\n                {offers.all_offers.map(p => {\r\n                  return <div>\r\n                          <h4>{p.platform}</h4>\r\n                          {p.offers !== undefined && p.offers.length > 0 &&\r\n                            <div>\r\n                            <table>\r\n                            <tr>\r\n                              <th>Price</th>\r\n                              <th>Minimum orders</th>\r\n                              <th>Report link</th>\r\n                            </tr>\r\n                              {p.offers.map(offer => {\r\n                                return <tr>\r\n                                          <td>\r\n                                            <a href={offer.link} target=\"_blank\" rel=\"noopener noreferrer\">{offer.price}</a>\r\n                                          </td>\r\n                                          <td>\r\n                                            {offer.min_order}\r\n                                          </td>\r\n                                          <td>\r\n                                            <button className=\"flag\"><i className=\"fa fa-flag\"/></button>\r\n                                          </td>\r\n                                        </tr>\r\n                              })}\r\n                            </table>\r\n                            </div>\r\n                          }\r\n                          </div>\r\n                })}\r\n              </p>\r\n            <span className=\"more\">Show more...</span>\r\n            </div>\r\n        }\r\n        {offers.all_offers === undefined || offers.all_offers.length == 0 &&\r\n          <h3>No offers found</h3>\r\n        }\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantScreen;\r\n","import React from 'react';\r\nimport { NavLink, Link } from 'react-router-dom';\r\nimport './Header.css';\r\n\r\nconst Header = () => {\r\n  return (\r\n    <nav className=\"Header\">\r\n      <Link to=\"/\">\r\n        <img alt=\"Logo\" className=\"Header-logo\" src=\"favicon.ico\"/>\r\n      </Link>\r\n      <NavLink key=\"plants\" className=\"Header-link\" exact to=\"/plants\" activeClassName=\"active\">Plants</NavLink>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './ScreenHeader.css';\r\n\r\nconst ScreenHeader = ({title}) => {\r\n  return (\r\n    <header className=\"Screen-header\">\r\n      <h1 className=\"Screen-title\">{title}</h1>\r\n    </header>\r\n  );\r\n}\r\n\r\nexport default ScreenHeader;\r\n","import React from 'react';\r\nimport ScreenHeader from '../ScreenHeader';\r\n\r\nconst Dashboard = ({details}) => {\r\n  return (\r\n    <div>\r\n      <ScreenHeader title=\"CITES Monitor\"/>\r\n      <p>What's worse than one illegally trafficked plant? 5000 illegally trafficked plants!</p>\r\n      <p>Welcome to the CITES endangered species monitoring tool!</p>\r\n      <img\r\n      src=\"https://hips.hearstapps.com/esq.h-cdn.co/assets/15/08/1424204090-tumblr_m4g0ddotsx1qa1w9bo1_1280.jpg?resize=480:*\"\r\n      alt=\"Li'l Sebastian\"\r\n      />\r\n      <p>We currently have {details.length} plants in our database.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","import { connect } from 'react-redux'\r\nimport Dashboard from '../components/Dashboard'\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    details: state.details\r\n  }\r\n}\r\n\r\nconst DashboardContainer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(Dashboard)\r\n\r\nexport default DashboardContainer\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './Card.css';\r\n\r\nconst Card = ({path, name, image}) => {\r\n  return (\r\n    <span>\r\n      <Link to={path}>\r\n        <div className=\"Card complete\">\r\n          <div className=\"Card-element\">\r\n            <img className=\"complete\" src={image} alt={name}/>\r\n            <div className=\"Card-description\">{name}</div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from 'react';\r\nimport Card from '../Card';\r\nimport '../../App.css';\r\nimport './Gallery.css';\r\n\r\nclass EditableGallery extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      search: \"\"\r\n    };\r\n  }\r\n\r\n  handleSearchChange = (event) => {\r\n    this.setState({search: event.target.value.toLowerCase()});\r\n  }\r\n\r\n  render() {\r\n    const {elements} = this.props;\r\n    const {search} = this.state;\r\n    const filteredElements = elements.filter(element => element.name.toLowerCase().includes(search));\r\n    return (\r\n      <div>\r\n        <input\r\n          className=\"search\"\r\n          type=\"text\"\r\n          value={search}\r\n          onChange={(event) => this.handleSearchChange(event)}\r\n          placeholder=\"Search...\"/>\r\n        <div className=\"Elements\">\r\n          {\r\n            filteredElements.map(element => {\r\n              return  <span key={element.id} className=\"Element\">\r\n                        <Card name={element.name} path={element.path} image={element.image}/>\r\n                      </span>\r\n            })\r\n          }\r\n        </div>\r\n        <button className=\"Fab Refresh\"><i className=\"fa fa-sync\"/></button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditableGallery;\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom'\r\nimport ScreenHeader from '../ScreenHeader';\r\nimport Gallery from '../Gallery';\r\n\r\nconst PlantsScreen = ({details}) => {\r\n  const elements = details.map(plantDetails => ({\r\n    id: plantDetails.id,\r\n    name: plantDetails.name,\r\n    path: \"/plant/\" + plantDetails.id,\r\n    image: plantDetails.images !== undefined? plantDetails.images[0] : \"https://www.westminster.ac.uk/sites/default/public-files/styles/panel_image_4_4_1200px_/public/general-images/Plant-edited.jpg?itok=cOXgyF9j\"\r\n  }));\r\n  return (\r\n    <div>\r\n      <ScreenHeader title=\"Plants\"/>\r\n      <Gallery elements={elements}/>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default withRouter(PlantsScreen);\r\n","import { connect } from 'react-redux'\r\nimport PlantsScreen from '../components/PlantsScreen'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    details: state.details\r\n  }\r\n}\r\n\r\nconst PlantsScreenContainer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(PlantsScreen)\r\n\r\nexport default PlantsScreenContainer\r\n","import { connect } from 'react-redux'\r\nimport PlantScreen from '../components/PlantScreen'\r\n\r\nconst getPlantOffers = (offers, props) => {\r\n  var plantOffers = offers.find(plantOffer => plantOffer.id == props.match.params.plantId);\r\n  plantOffers = plantOffers !== undefined? plantOffers : {\"id\": props.match.params.plantId, \"all_offers\": []};\r\n  return plantOffers;\r\n}\r\n\r\nconst getPlantDetails = (details, props) => {\r\n  return details.find(plantDetails => plantDetails.id == props.match.params.plantId);\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    offers: getPlantOffers(state.offers, ownProps),\r\n    details: getPlantDetails(state.details, ownProps)\r\n  }\r\n}\r\n\r\nconst PlantScreenContainer = connect(\r\n  mapStateToProps,\r\n  null\r\n)(PlantScreen)\r\n\r\nexport default PlantScreenContainer\r\n","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport './App.css';\r\nimport Header from './components/Header';\r\nimport DashboardContainer from './container/DashboardContainer';\r\nimport PlantsScreenContainer from './container/PlantsScreenContainer';\r\nimport PlantScreenContainer from './container/PlantScreenContainer';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <div className=\"Content\">\r\n          <Switch>\r\n            <Route exact path=\"/\" component={DashboardContainer}/>\r\n            <Route exact path=\"/plants\" component={PlantsScreenContainer}/>\r\n            <Route exact path=\"/plant/:plantId\" component={PlantScreenContainer}/>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { BrowserRouter as Router} from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { createStore } from 'redux'\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { combineReducers } from 'redux'\r\n\r\nimport details from './data/details.json';\r\nimport offers from './data/offers.json';\r\n\r\nfunction getOffers() {\r\n  return fetch('https://raw.githubusercontent.com/alintulu/LilSebastian/master/output/offers3plants.json')\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      return data;\r\n    });\r\n}\r\n\r\nconst initialState = {\r\n  details: details,\r\n  offers: offers\r\n}\r\n\r\nconst store = createStore(combineReducers({}), initialState);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root'));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}